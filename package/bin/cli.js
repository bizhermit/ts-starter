#! /usr/bin/env node
"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var c=Object.getOwnPropertyDescriptor(t,i);c&&!("get"in c?!t.__esModule:c.writable||c.configurable)||(c={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,c)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i in e)"default"!==i&&Object.prototype.hasOwnProperty.call(e,i)&&__createBinding(t,e,i);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0});const path_1=__importDefault(require("path")),fse=__importStar(require("fs-extra")),cp=__importStar(require("child_process")),cli_utils_1=require("@bizhermit/cli-utils"),create_cli_1=__importDefault(require("../dist/create-cli")),create_module_1=__importDefault(require("../dist/create-module")),create_next_app_1=__importDefault(require("../dist/create-next-app")),create_react_native_1=__importDefault(require("../dist/create-react-native")),create_react_app_1=__importDefault(require("../dist/create-react-app")),sepStr="::::::::::::::::::::::::::::::",pkg=require("../package.json");(0,cli_utils_1.wl)(sepStr),(0,cli_utils_1.wl)(`\n${pkg.name} v${pkg.version}`);const dir=path_1.default.join(process.cwd(),(0,cli_utils_1.getArg)()||"./");(0,cli_utils_1.wl)(`  dirname: ${dir}`);const argProjectType=(0,cli_utils_1.getKeyArg)("-t","-type"),skipInteractive=null!=argProjectType&&argProjectType.length>0;skipInteractive||(0,cli_utils_1.wl)("\nselect project type\n- [c]  : cancel\n- [mod]: module\n- [cli]: command line interface application\n- [spa]: web application (react)\n- [web]: web application (next.js + express)\n- [dsk]: desktop application (next.js + electron)\n- [app]: web and desktop application (next.js + express / electron)\n- [mob]: mobile application (react-native)");const changeDir=()=>{fse.existsSync(dir)||((0,cli_utils_1.wl)(`create dir : ${dir}`),fse.mkdirSync(dir,{recursive:!0})),cp.spawnSync("cd",[dir],{shell:!0,stdio:"inherit",cwd:process.cwd()})},succeededProcess=e=>{(0,cli_utils_1.wl)(`\nset up succeeded: ${e}`);const t=(0,cli_utils_1.getArg)();null!=t&&process.cwd()!==dir&&((0,cli_utils_1.wl)("start with change directory"),(0,cli_utils_1.wl)(`  cd ${t}`))},main=async e=>{(0,cli_utils_1.wl)(" ");try{switch(e){case"mod":case"module":(0,cli_utils_1.wl)("create module"),changeDir(),await(0,create_module_1.default)(dir),succeededProcess(e);break;case"cli":(0,cli_utils_1.wl)("create command line interface application"),changeDir(),await(0,create_cli_1.default)(dir),succeededProcess(e);break;case"spa":case"react":(0,cli_utils_1.wl)("create web application (react)"),changeDir(),await(0,create_react_app_1.default)(dir),succeededProcess(e);break;case"web":case"nexpress":(0,cli_utils_1.wl)("create web application (next.js + express)"),changeDir(),await(0,create_next_app_1.default)(dir,{server:!0}),succeededProcess(e);break;case"dsk":case"desktop":case"nextron":(0,cli_utils_1.wl)("create desktop application (next.js + electron)"),changeDir(),await(0,create_next_app_1.default)(dir,{desktop:!0}),succeededProcess(e);break;case"app":case"all":(0,cli_utils_1.wl)("create web and desktop application (next.js + express / electron)"),changeDir(),await(0,create_next_app_1.default)(dir,{server:!0,desktop:!0}),succeededProcess(e);break;case"mob":case"mobile":(0,cli_utils_1.wl)("create mobile application (react-native)"),changeDir(),await(0,create_react_native_1.default)(dir),succeededProcess(e);break;default:(0,cli_utils_1.wl)("cancel")}}catch(t){process.stderr.write(String(t)),(0,cli_utils_1.wl)(`\nset up failed: ${e}`)}(0,cli_utils_1.wl)(`\n${sepStr}`)};skipInteractive?main(argProjectType):(0,cli_utils_1.rl)("please input (default c) > ").then(main).catch((e=>{process.stderr.write(e),(0,cli_utils_1.wl)(`${pkg.name} failed.`),(0,cli_utils_1.wl)(`\n${sepStr}`)}));