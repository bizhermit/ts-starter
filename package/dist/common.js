"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.removeGit=exports.generateTemplate=exports.installLibs=exports.savePackageJson=exports.getPackageJson=void 0;const cli_utils_1=__importDefault(require("@bizhermit/cli-utils")),child_process_1=require("child_process"),fs_extra_1=require("fs-extra"),path_1=__importDefault(require("path")),rimraf_1=__importDefault(require("rimraf")),initializePackageContent=(e,t)=>(t.forEach((t=>{e[t.propertyName]=e[t.propertyName]||t.initValue})),e),getPackageJson=async(e,t)=>{const i=path_1.default.join(e,"package.json");(0,fs_extra_1.existsSync)(i)||(cli_utils_1.default.wl("not found package.json. begin create"),await(0,fs_extra_1.writeFile)(i,"{}"));const a=await(0,fs_extra_1.readFile)(i),r=JSON.parse(a.toString());return initializePackageContent(r,[{propertyName:"name",initValue:path_1.default.basename(e)},{propertyName:"version",initValue:"0.0.0-alpha.0"},{propertyName:"description",initValue:""},{propertyName:"scripts",initValue:{}},{propertyName:"repository",initValue:{type:"git",ulr:""}},{propertyName:"bugs",initValue:""},{propertyName:"author",initValue:""},{propertyName:"contributors",initValue:[]},{propertyName:"private",initValue:!0},{propertyName:"license",initValue:"MIT"},{propertyName:"dependencies",initValue:{}},{propertyName:"devDependencies",initValue:{}}]),t?.clearScripts&&(r.scripts={}),r};exports.getPackageJson=getPackageJson;const savePackageJson=async(e,t)=>{const i={},a=["name","version","description","repository","bugs","author","homepage","contributors","license","private","main","bin","files","scripts","dependencies","devDependencies","build","browser"];for(const e of a)e in t&&(i[e]=t[e]);Object.keys(t).forEach((e=>{e in i||(i[e]=t[e])})),await(0,fs_extra_1.writeFile)(path_1.default.join(e,"package.json"),JSON.stringify(i,null,2))};exports.savePackageJson=savePackageJson;const installLibs=(e,t=[],i=[])=>{if(cli_utils_1.default.wl("npm install..."),t.length>0){cli_utils_1.default.wl(" install dependencies");for(const e of t)cli_utils_1.default.wl(`  - ${e}`);(0,child_process_1.spawnSync)("npm",["i","--legacy-peer-deps",...t],{shell:!0,stdio:"inherit",cwd:e})}if(i.length>0){cli_utils_1.default.wl(" install devDependencies");for(const e of i)cli_utils_1.default.wl(`  - ${e}`);(0,child_process_1.spawnSync)("npm",["i","--save-dev",...i],{shell:!0,stdio:"inherit",cwd:e})}(0,child_process_1.spawnSync)("npm",["audit"],{shell:!0,stdio:"inherit",cwd:e})};exports.installLibs=installLibs;const generateTemplate=async(e,t)=>{await(0,fs_extra_1.copy)(path_1.default.join(__dirname,"../template",t),e,{overwrite:!0,recursive:!0}),await(0,fs_extra_1.copyFile)(path_1.default.join(__dirname,"../template/LICENSE"),path_1.default.join(e,"LICENSE"))};exports.generateTemplate=generateTemplate;const removeGit=e=>{rimraf_1.default.sync(path_1.default.join(e,".git"))};exports.removeGit=removeGit;